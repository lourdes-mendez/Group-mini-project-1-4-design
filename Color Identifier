import cv2
import numpy as np


cap = cv2.VideoCapture(0)

while True:
   
    _,  frame = cap.read()
    hsv_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
        #red color
        low_red=np.array([1,100,60])
        high_red=np.array([7,255,255])
        red_mask = cv2.inRange(hsv_frame, low_red, high_red)
        #red = cv2.bitwise_and(frame, frame, mask=red_mask)
        #blue
        low_blue= np.array([94,80,2])
        high_blue=np.array([120,255,255])
        blue_mask=cv2.inRange(hsv_frame, low_blue, high_blue)
        #blue = cv2.bitwise_and(frame, frame, mask=blue_mask)
        #green
        low_green= np.array([25,30,30])
        high_green=np.array([85,255,255])
        green_mask=cv2.inRange(hsv_frame, low_green, high_green)
        #green = cv2.bitwise_and(frame, frame, mask=green_mask)
        #yellow
        low_yellow= np.array([20,100,100])
        high_yellow=np.array([30,255,255])
        yellow_mask=cv2.inRange(hsv_frame, low_yellow, high_yellow)
        #yellow = cv2.bitwise_and(frame, frame, mask=yellow_mask)
        #orange
        low_orange= np.array([8,50,50])
        high_orange=np.array([15,255,255])
        orange_mask=cv2.inRange(hsv_frame, low_orange, high_orange)
        #orange = cv2.bitwise_and(frame, frame, mask=orange_mask)
        #purple
        low_purple= np.array([121,30,30])
        high_purple=np.array([145,255,255])
        purple_mask=cv2.inRange(hsv_frame, low_purple, high_purple)
        #purple = cv2.bitwise_and(frame, frame, mask=purple_mask)
        #white
        low_white= np.array([0,0,30])
        high_white=np.array([180,25,255])
        white_mask=cv2.inRange(hsv_frame, low_white, high_white)
       # white = cv2.bitwise_and(frame, frame, mask=white_mask)
    #check or other colors
    mask = purple_mask+orange_mask+yellow_mask+green_mask+blue_mask+red_mask
    background=white_mask-(purple_mask+orange_mask+yellow_mask+green_mask+blue_mask+red_mask)
    #output color
    if np.array_equal(background, white_mask):
        print("roll the dice")
    elif np.array_equal(mask, purple_mask):
        print("purple")
    elif np.array_equal(mask, green_mask):
        print("green")
    elif np.array_equal(mask, orange_mask):
        print("orange")
    elif np.array_equal(mask, yellow_mask):
        print("yellow")
    elif np.array_equal(mask, blue_mask):
        print("blue")
    elif np.array_equal(mask, red_mask):
        print("red_mask")
    else:
        print("error")
   
    #shows color masks
   # cv2.imshow("mask",mask)
    #cv2.imshow("white",white_mask)
   # cv2.imshow("frame",frame)
   # cv2.imshow("red",red_mask)
    #cv2.imshow("blue",blue_mask)
   # cv2.imshow("green",green_mask)
   # cv2.imshow("yellow",yellow_mask)
  #  cv2.imshow("purple",purple_mask)
   # cv2.imshow("orange",orange_mask)
  
    
    key=cv2.waitKey(1000)
    if key==ord('q'):
        break
#
#
#
#
#
#
#

# this is the same code but i tried to make it asier to copy in the the made code, i didnt test it though
import cv2
import numpy as np
def camera_determine_color():
    cap = cv2.VideoCapture(0)
    while True:
        #camera setup
        _,  frame = cap.read()
        hsv_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
        #setting up colors
        #red color
        low_red=np.array([161,155,84])
        high_red=np.array([179,255,255])
        red_mask = cv2.inRange(hsv_frame, low_red, high_red)
      #  red = cv2.bitwise_and(frame, frame, mask=red_mask)
        #blue
        low_blue= np.array([94,80,2])
        high_blue=np.array([126,255,255])
        blue_mask=cv2.inRange(hsv_frame, low_blue, high_blue)
      #  blue = cv2.bitwise_and(frame, frame, mask=blue_mask)
        #green
        low_green= np.array([25,30,30])
        high_green=np.array([85,255,255])
        green_mask=cv2.inRange(hsv_frame, low_green, high_green)
       # green = cv2.bitwise_and(frame, frame, mask=green_mask)
        #yellow
        low_yellow= np.array([20,100,100])
        high_yellow=np.array([30,255,255])
        yellow_mask=cv2.inRange(hsv_frame, low_yellow, high_yellow)
       # yellow = cv2.bitwise_and(frame, frame, mask=yellow_mask)
        #orange
        low_orange= np.array([5,50,50])
        high_orange=np.array([15,255,255])
        orange_mask=cv2.inRange(hsv_frame, low_orange, high_orange)
       # orange = cv2.bitwise_and(frame, frame, mask=orange_mask)
        #purple
        low_purple= np.array([135,30,30])
        high_purple=np.array([145,255,255])
        purple_mask=cv2.inRange(hsv_frame, low_purple, high_purple)
       # purple = cv2.bitwise_and(frame, frame, mask=purple_mask)
        #white
        low_white= np.array([0,0,30])
        high_white=np.array([180,25,255])
        white_mask=cv2.inRange(hsv_frame, low_white, high_white)
       # white = cv2.bitwise_and(frame, frame, mask=white_mask)
        
        #check for other colors and white background
        mask = purple_mask+orange_mask+yellow_mask+green_mask+blue_mask+red_mask
        background=white_mask-(purple_mask+orange_mask+yellow_mask+green_mask+blue_mask+red_mask)
        
        #output color
        if np.array_equal(background, white_mask):
            print("roll the dice")
        elif np.array_equal(mask, purple_mask):
            colore = 'purple'
            print("purple")
        elif np.array_equal(mask, green_mask):
            colore= 'green'
            print("green")
        elif np.array_equal(mask, orange_mask):
            colore= 'orange'
            print("orange")
        elif np.array_equal(mask, yellow_mask):
            colore='yellow'
            print("yellow")
        elif np.array_equal(mask, blue_mask):
            colore='blue'
            print("blue")
        elif np.array_equal(mask, red_mask):
            colore='red'
            print("red_mask")
        else:
            print("error")
        
        #shows color masks
       # cv2.imshow("mask",mask)
        #cv2.imshow("white",white_mask)
       # cv2.imshow("frame",frame)
       # cv2.imshow("red",red_mask)
        #cv2.imshow("blue",blue_mask)
       # cv2.imshow("green",green_mask)
       # cv2.imshow("yellow",yellow_mask)
      #  cv2.imshow("purple",purple_mask)
       # cv2.imshow("orange",orange_mask)
       
       # camera refresh rate and break
        key=cv2.waitKey(1000)
        return colore
        if key==ord('q'):
            break
